using Godot;

namespace {{ namespace }};

public partial class {{class_name}} : {{base_class_list_text}}
{
{{~  for member in  getter_members   ~}}
    {{~  if member.type == "Vector2"   ~}} 
    private {{ member.type  }} {{ member.member_name  }}
    {
        get => Input.GetVector(
        "{{~ member.attribute.action_name  ~}}_-X{{~ if use_player_index ~}}_" + {{player_index_member_name}}{{else}}"{{end}}, 
        "{{~ member.attribute.action_name  ~}}_+X{{~ if use_player_index ~}}_" + {{player_index_member_name}}{{else}}"{{end}}, 
        "{{~ member.attribute.action_name  ~}}_-Y{{~ if use_player_index ~}}_" + {{player_index_member_name}}{{else}}"{{end}}, 
        "{{~ member.attribute.action_name  ~}}_+Y{{~ if use_player_index ~}}_" + {{player_index_member_name}}{{else}}"{{end}});
    }
    {{~  else if member.type == "bool"   ~}}
    private {{ member.type  }} {{ member.member_name  }} 
    {
        get => Input.IsActionPressed("{{~ member.attribute.action_name  ~}}{{~ if use_player_index ~}}_" + {{player_index_member_name}}{{else}}"{{end}});
    }
    {{~  else if member.type == "float"   ~}}
    private {{ member.type  }} {{ member.member_name  }} {
        get => Input.GetActionStrength("{{~ member.attribute.action_name  ~}}{{~ if use_player_index ~}}_" + {{player_index_member_name}}{{else}}"{{end}});
    }
    {{~ end  ~}}
{{~  end   ~}}

{{~ if unhandled_input_members.size > 0  ~}} 
    public override partial void _UnhandledInput(InputEvent evt){
        {{~  for member in unhandled_input_members  }}
            if(evt.IsActionPressed("{{~ member.attribute.action_name  ~}}{{~ if use_player_index ~}}_" + {{player_index_member_name}}{{else}}"{{end}})) 
            {
                {{~  if member.is_delegate == true  ~}}
                EmitSignal(SignalName.{{~ member.delegate_event_name  ~}}  {{~ if member.attribute.fire_on_release ~}} ,true{{~ end ~}});
                {{~ else  ~}}
                {{ member.member_name  }} = true;
                {{~ end  ~}}
                {{~ if member.attribute.handle_input ~}}
                GetViewport().SetInputAsHandled();
                {{~ end  ~}}
            }
            {{~ if member.attribute.fire_on_release ~}}
            else if(evt.IsActionReleased("{{~ member.attribute.action_name  ~}}{{~ if use_player_index ~}}_" + {{player_index_member_name}}{{else}}"{{end}})) 
            {
                {{~ if member.is_delegate == true ~}}
                EmitSignal(SignalName.{{~ member.delegate_event_name  ~}},false);
                {{~ else  ~}}
                {{ member.member_name  }} = false;
                {{~ end  ~}}
                {{~ if member.attribute.handle_input ~}}
                GetViewport().SetInputAsHandled();
                {{~ end  ~}}
            }
            {{~ end ~}}
        {{~ end  ~}}
    }
{{~  end   ~}}
}
